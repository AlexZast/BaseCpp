
#include "head.h"


using namespace std;


// Задание 2 Функция печати целого числа
	void Print(int a){
		cout << a << endl;
	};
// задание 3. Перегружаем функцию печати для элементов типа char
	void Print(char arr[4]){
		cout << arr << endl;
	}


int main(int argc, char** args)
{
    
/* Задание №1 
	1. Создать в программе две переменные типов short и unsigned char.
	2. Записать в первую переменную значение 45000, во вторую — 1400.
	3. Вывести значения созданных переменных на экран через cout.
	4. Запустить трансляцию программы, проверить сообщения транслятора на экране.
	5. Запустить программу, сравнить полученные в выводе значения с записанными в исходном тексте.
*/
Path("Path 1");

 	short a = 45000;
 	unsigned char b = 1400;
 	cout << "a = " << a << " | " << "b = " << b << endl;

/*
D:\GeekBrainsEducation\main_C++\C ++basics\BaseCpp\HW2\src\program.cpp:21:21: 
warning: unsigned conversion from 'int' to 'unsigned char' changes value from '1400' to '120' [-Woverflow]
21 |   unsigned char b = 1400; 
-значение char "обрезалось" до 120 в результатае записи только младщих байтов которые "влезли" в переменную char  типа unsignet char (0 до 255 - 256 значений)

значение short должно находиться в диапазоне от –32768 до 32767 - запись значения 45к переполняет
 переменную и отсчет идет заново с - 32768 (45000 - 32767 = 12 233) и (-32768 + 12 233 - 1(значение 0)) = -20536 (наш вывод в консоль)

Вывод на экран
a = -20536 | b = x  (отрицательное значение и символ х(120))
*/
Path("Path 2");
/* Задание №2
	1. Объявить в файле-заголовке программы прототип функции, вычисляющей остаток от деления одного целого числа на другое (операция ‘%’)/
	2. Реализовать объявленную функцию в основном файле программы.
	3. В основном файле программы создать функцию, выводящую на печать целое число.
	4. Вызвать функцию печати. В качестве аргумента использовать возвращаемое значение функции определения остатка.
	5. Избежать при решении создания дополнительной переменной.
*/

 	Print(Devision(25, 6)); // Функция PrintInt реализована выше вначале файла, функция Devision реализована в заголовочном файле head.h

Path("Path 3");

/* Задание №3
1. Составить массив из 4 элементов типа char и задать его неименованным блоком.
2. Составить функцию, выводящую созданный массив на экран.
3. Проверить обработку массива при заполнении всех элементов и оставлении части элементов свободными.
*/

 	char arr[4] = {'c' , 'a' , 't', '\0'}; // При заполнении всех элементов массива и отсуствии в последнем элементе '0' вывод будет не корректен
 	Print(arr);
 	

Path("END");


system("pause"); // Для паузы при запуске файла .exe из системы
    return 0;					


}









